import java.util.*;
public class LinkedList
{
    class Node{
        int data;
        Node next;
        Node(int data){
            this.data=data;
            next=null;
        }
    }
    Node head=null;
    public void insert (int d){
        Node newnode=new Node(d);
        if(head==null){
            head=newnode;
        }else{
            Node temp=head;
            while(temp.next!=null){
                temp=temp.next;
            }
            temp.next=newnode;
        }
    }
    public void display(){
        Node temp=head;
        while(temp!=null){
            System.out.print(temp.data+"->");
            temp=temp.next;
        }
    }
    public void insertBeginning(int s){
        Node temp=head;
        Node insertNode=new Node(s);
        head=insertNode;
        insertNode.next=temp;
    }
    public void deleteFront(){
        Node temp=head;
        head=temp.next;
    }
    public void deleteLast(){
        Node temp1=head;
        Node temp2=temp1.next;
        while(temp2.next!=null){
            temp1=temp1.next;
            temp2=temp2.next;
        }
        temp1.next=null;
    }
    public static void main(String arg[]){
        LinkedList ob=new LinkedList();
       Scanner sc=new Scanner(System.in);
       int a;
       while(true){
           System.out.println("enter 1 to insert at end");
           System.out.println("Enter 2 to insert at beginning");
           System.out.println("enter 3 to insert at position");
           System.out.println("Enter 4 to delete at end");
           System.out.println("Enter 5 to delete at beginning");
           System.out.println("Enter 6 to delete at position");
           System.out.println("Enter 7 to exit");
           System.out.println("Enter 8 to exit");
           a=sc.nextInt();
           switch(a){
                case 1: System.out.println("Enter value to be inserted");
                   a=sc.nextInt();
                   ob.insert(a);
                   break;
                case 2: System.out.println("Enter value to be inserted");
                   a=sc.nextInt();
                   ob.insertBeginning(a);
                   break;
                case 3: System.out.println("Enter position to be inserted");
                    ob.insertPos();
                    break;
                case 4:
                   ob.deleteLast();break;
                case 5:
                   ob.deleteFront();break;
                case 6:
                    ob.deleteAtPos();break;
                case 7: System.out.println("Elements in linked list are");
                   ob.display();
                   System.out.println();
                   break;
                case 8:
                    return ;   
                
           }
           
       }
        
    }
}
